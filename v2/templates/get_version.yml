- stage: 'get_version' 
  displayName: 'get_version' 
  condition: or(eq(dependencies.test_grype.outputs['test_grype.finalresult.gryre'],0),succeeded('Verificationgrype'))
  dependsOn: 
  - test_grype
  - Verificationgrype
  jobs:
  - job: 'job_version' 
    displayName: 'job_version' 
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: $(kubernetesServiceEndpoint)
        namespace: 'prod'
        command: 'get'
        arguments: 'deployments --field-selector metadata.name=voteapp'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
      name: "kube"
    - task: CmdLine@2
      inputs:
        script: |
          versionrep=$((curl "https://hub.docker.com/v2/repositories/$(imageRepository)/tags" | jq '."results"[0]["name"]')| sed 's/^"//;s/"$//')
          versionold=$(echo $kube_KUBECTLOUTPUT | jq '.items[0].spec.template.spec.containers[].image' | cut -d: -f2 | sed 's/"//')
          versionnew=$(cat azure-vote/main.py | grep -E "^ver = \"[0-9.]+\"\$"|awk -F\" {'print $2'})
          echo "##vso[task.setvariable variable=vernew;isOutput=true]$versionnew"
          echo "##vso[task.setvariable variable=verrep;isOutput=true]$versionrep"
          echo "##vso[task.setvariable variable=verold;isOutput=true]$versionold"
          echo verrep=$versionrep verold=$versionold vernew=$versionnew
      name: "scver"
